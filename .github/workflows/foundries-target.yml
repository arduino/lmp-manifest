on:
  workflow_call:
    inputs:
      factory:
        description: "Factory name"
        type: string
        default: 'arduino'
      branch:
        description: "Branch name"
        type: string
        default: 'main'
      environment:
        description: "Environment name"
        type: string
        default: 'production'
    outputs:
      factory-version:
        description: "Factory Target Latest Version"
        value: ${{ jobs.GetTargetVersion.outputs.target-version }}
      bucket-version:
        description: "Bucket Target Latest Version"
        value: ${{ jobs.GetDeployedVersion.outputs.bucket-version }}
permissions:
  contents: read
env:
  DOMAIN: '{"staging": "oniudra", "production": "arduino"}'
jobs:
  GetTargetVersion:
    runs-on: 'ubuntu-latest'
    outputs:
      target-version: ${{ steps.fetch-targets.outputs.target-version }}
    steps:
      - name: Fetch Latest Target
        id: fetch-targets
        run: |
          TARGET=$(curl -H "osf-token: ${{ secrets.FOUNDRIES_TOKEN }}" \
            -H 'accept: application/json' \
            'https://api.foundries.io/ota/factories/${{ inputs.factory }}/targets/' \
            | jq -r '.[] | .custom | select(has("tags")) | select(.tags | any(. == "main")) | .version' \
            | sort | tail -1)
            echo "target-version=$TARGET" >> $GITHUB_OUTPUT
  GetDeployedVersion:
    runs-on: 'ubuntu-latest'
    environment: ${{ inputs.environment }}
    outputs:
      bucket-version: ${{ steps.get-info-pre-json.outputs.latest-version }}
    steps:
      - name: Get info-pre.json
        id: get-info-pre-json
        run: |
          echo "latest-version=$(curl https://downloads.${{ fromJSON(env.DOMAIN)[inputs.environment] }}.cc/portentax8image/info-pre.json | jq -r '.latest.version')" >> $GITHUB_OUTPUT